// Generated by Dagger (https://dagger.dev).
package com.woocer.test.di;

import com.woocer.test.data.sharedPref.UserSharedPref;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.OkHttpClient;
import retrofit2.Retrofit;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvideRetrofitFactory implements Factory<Retrofit> {
  private final Provider<OkHttpClient> okHttpClientProvider;

  private final Provider<UserSharedPref> userSharedPrefProvider;

  public NetworkModule_ProvideRetrofitFactory(Provider<OkHttpClient> okHttpClientProvider,
      Provider<UserSharedPref> userSharedPrefProvider) {
    this.okHttpClientProvider = okHttpClientProvider;
    this.userSharedPrefProvider = userSharedPrefProvider;
  }

  @Override
  public Retrofit get() {
    return provideRetrofit(okHttpClientProvider.get(), userSharedPrefProvider.get());
  }

  public static NetworkModule_ProvideRetrofitFactory create(
      Provider<OkHttpClient> okHttpClientProvider,
      Provider<UserSharedPref> userSharedPrefProvider) {
    return new NetworkModule_ProvideRetrofitFactory(okHttpClientProvider, userSharedPrefProvider);
  }

  public static Retrofit provideRetrofit(OkHttpClient okHttpClient, UserSharedPref userSharedPref) {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.provideRetrofit(okHttpClient, userSharedPref));
  }
}
