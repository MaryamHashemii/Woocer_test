// Generated by Dagger (https://dagger.dev).
package com.woocer.test.presentation.product;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ProductFragment_MembersInjector implements MembersInjector<ProductFragment> {
  private final Provider<ProductAdapter> productAdapterProvider;

  public ProductFragment_MembersInjector(Provider<ProductAdapter> productAdapterProvider) {
    this.productAdapterProvider = productAdapterProvider;
  }

  public static MembersInjector<ProductFragment> create(
      Provider<ProductAdapter> productAdapterProvider) {
    return new ProductFragment_MembersInjector(productAdapterProvider);
  }

  @Override
  public void injectMembers(ProductFragment instance) {
    injectProductAdapter(instance, productAdapterProvider.get());
  }

  @InjectedFieldSignature("com.woocer.test.presentation.product.ProductFragment.productAdapter")
  public static void injectProductAdapter(ProductFragment instance, ProductAdapter productAdapter) {
    instance.productAdapter = productAdapter;
  }
}
